[{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":11123800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:56.045 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":30630000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":462100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":597300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":12046200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":13,"name":"Validate common scenarios for addition via get call","description":"","id":"validate-common-scenarios-for-addition-via-get-call","type":"scenario","keyword":"Scenario","steps":[{"name":"call read('classpath:features\/commons\/CommonValidationsViaPost.feature') {payLoadReq:#(payLoad),computeURL:#(baseUrlCompute)}","result":{"duration":3391912900,"error_message":"com.intuit.karate.exception.KarateException: ValidateAdditionPOSTAPI.feature:14 - \nCommonValidationsViaPost.feature:20 - status code was: 200, expected: 400, response time: 58, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":3}\nCommonValidationsViaPost.feature:30 - status code was: 200, expected: 400, response time: 29, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":7}\nCommonValidationsViaPost.feature:38 - null\nCommonValidationsViaPost.feature:54 - evaluation (js) failed: payLoadReq.val1 = <operand1>, javax.script.ScriptException: <eval>:1:18 Expected an operand but found <\r\npayLoadReq.val1 = <operand1>\r\n                  ^ in <eval> at line number 1 at column number 18\nstack trace: jdk.nashorn.api.scripting.NashornScriptEngine.throwAsScriptException(NashornScriptEngine.java:470)\nCommonValidationsViaPost.feature:66 - evaluation (js) failed: payLoadReq.val2 = <operand2>, javax.script.ScriptException: <eval>:1:18 Expected an operand but found <\r\npayLoadReq.val2 = <operand2>\r\n                  ^ in <eval> at line number 1 at column number 18\nstack trace: jdk.nashorn.api.scripting.NashornScriptEngine.throwAsScriptException(NashornScriptEngine.java:470)\n[7.1:86] CommonValidationsViaPost.feature:81 - status code was: 200, expected: 400, response time: 15, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":7}\n[7.3:88] CommonValidationsViaPost.feature:81 - status code was: 200, expected: 400, response time: 30, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":0}\nCommonValidationsViaPost.feature:129 - path: $, actual: 'Unrecognized field \"val3\" (class com.ataccama.qa.testcalc.rest.JsonCalcRequest), not marked as ignorable (3 known properties: \"val1\", \"val2\", \"operation\"])\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@780551a0; line: 1, column: 46] (through reference chain: com.ataccama.qa.testcalc.rest.JsonCalcRequest[\"val3\"])', expected: 'Unknown operation: mod', reason: not a sub-string\nCommonValidationsViaPost.feature:141 - path: $, actual: 'Unrecognized field \"val3\" (class com.ataccama.qa.testcalc.rest.JsonCalcRequest), not marked as ignorable (3 known properties: \"val1\", \"val2\", \"operation\"])\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@6be24824; line: 1, column: 45] (through reference chain: com.ataccama.qa.testcalc.rest.JsonCalcRequest[\"val3\"])', expected: 'Operation must not be null!', reason: not a sub-string","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14,"doc_string":{"content_type":"","value":"03:14:59.669 feature call failed: classpath:features\/commons\/CommonValidationsViaPost.feature\narg: {\"payLoadReq\":{\"operation\":null,\"val1\":3,\"val2\":7,\"val3\":7},\"computeURL\":\"http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute\"}\nCommonValidationsViaPost.feature:20 - status code was: 200, expected: 400, response time: 58, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":3}\nCommonValidationsViaPost.feature:30 - status code was: 200, expected: 400, response time: 29, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":7}\nCommonValidationsViaPost.feature:38 - null\nCommonValidationsViaPost.feature:54 - evaluation (js) failed: payLoadReq.val1 = <operand1>, javax.script.ScriptException: <eval>:1:18 Expected an operand but found <\r\npayLoadReq.val1 = <operand1>\r\n                  ^ in <eval> at line number 1 at column number 18\nstack trace: jdk.nashorn.api.scripting.NashornScriptEngine.throwAsScriptException(NashornScriptEngine.java:470)\nCommonValidationsViaPost.feature:66 - evaluation (js) failed: payLoadReq.val2 = <operand2>, javax.script.ScriptException: <eval>:1:18 Expected an operand but found <\r\npayLoadReq.val2 = <operand2>\r\n                  ^ in <eval> at line number 1 at column number 18\nstack trace: jdk.nashorn.api.scripting.NashornScriptEngine.throwAsScriptException(NashornScriptEngine.java:470)\n[7.1:86] CommonValidationsViaPost.feature:81 - status code was: 200, expected: 400, response time: 15, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":7}\n[7.3:88] CommonValidationsViaPost.feature:81 - status code was: 200, expected: 400, response time: 30, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":0}\nCommonValidationsViaPost.feature:129 - path: $, actual: 'Unrecognized field \"val3\" (class com.ataccama.qa.testcalc.rest.JsonCalcRequest), not marked as ignorable (3 known properties: \"val1\", \"val2\", \"operation\"])\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@780551a0; line: 1, column: 46] (through reference chain: com.ataccama.qa.testcalc.rest.JsonCalcRequest[\"val3\"])', expected: 'Unknown operation: mod', reason: not a sub-string\nCommonValidationsViaPost.feature:141 - path: $, actual: 'Unrecognized field \"val3\" (class com.ataccama.qa.testcalc.rest.JsonCalcRequest), not marked as ignorable (3 known properties: \"val1\", \"val2\", \"operation\"])\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@6be24824; line: 1, column: 45] (through reference chain: com.ataccama.qa.testcalc.rest.JsonCalcRequest[\"val3\"])', expected: 'Operation must not be null!', reason: not a sub-string","line":14}},{"name":"features\/commons\/CommonValidationsViaPost.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":14,"doc_string":{"content_type":"","value":"{\n  \"payLoadReq\": {\n    \"operation\": null,\n    \"val1\": 3,\n    \"val2\": 7,\n    \"val3\": 7\n  },\n  \"computeURL\": \"http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute\"\n}\n","line":14}},{"name":"url computeURL","result":{"duration":33600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":15},{"name":"payLoadReq.val1 = 3","result":{"duration":9900800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":16},{"name":"print payLoadReq","result":{"duration":726400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":17,"doc_string":{"content_type":"","value":"03:14:56.412 [print] {\n  \"operation\": \"add\",\n  \"val1\": 3\n}","line":17}},{"name":"request payLoadReq","result":{"duration":17800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":18},{"name":"method post","result":{"duration":2820668900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":19},{"name":"status 400","result":{"duration":1685000,"error_message":"com.intuit.karate.exception.KarateException: CommonValidationsViaPost.feature:20 - status code was: 200, expected: 400, response time: 58, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":3}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":20,"doc_string":{"content_type":"","value":"03:14:59.235 status code was: 200, expected: 400, response time: 58, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":3}","line":20}},{"name":"url computeURL","result":{"duration":18100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":25},{"name":"payLoadReq.val2 = 4","result":{"duration":14047800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":26},{"name":"print payLoadReq","result":{"duration":1292400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":27,"doc_string":{"content_type":"","value":"03:14:59.252 [print] {\n  \"operation\": \"add\",\n  \"val1\": 3,\n  \"val2\": 4\n}","line":27}},{"name":"request payLoadReq","result":{"duration":20700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":28},{"name":"method post","result":{"duration":31109400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":29},{"name":"status 400","result":{"duration":1357000,"error_message":"com.intuit.karate.exception.KarateException: CommonValidationsViaPost.feature:30 - status code was: 200, expected: 400, response time: 29, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":7}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":30,"doc_string":{"content_type":"","value":"03:14:59.284 status code was: 200, expected: 400, response time: 29, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":7}","line":30}},{"name":"url computeURL","result":{"duration":19000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":35},{"name":"payLoadReq.val1 = 3","result":{"duration":1857200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":36},{"name":"payLoadReq.val2 = 4","result":{"duration":331900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":37},{"name":"status 200","result":{"duration":718100,"error_message":"com.intuit.karate.exception.KarateException: CommonValidationsViaPost.feature:38 - null","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":38},{"name":"match response == {result:#number}","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":39},{"name":"url baseUrlCompute","result":{"duration":17700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":44},{"name":"request {}","result":{"duration":140600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":45},{"name":"method post","result":{"duration":17936500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":46,"doc_string":{"content_type":"","value":"03:14:59.308 xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 3; The markup in the document preceding the root element must be well-formed.","line":46}},{"name":"print payLoadReq","result":{"duration":1281200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":47,"doc_string":{"content_type":"","value":"03:14:59.311 [print] {\n  \"operation\": \"add\",\n  \"val1\": 3,\n  \"val2\": 4\n}","line":47}},{"name":"status 500","result":{"duration":12700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":48},{"name":"url baseUrlCompute","result":{"duration":23000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":53},{"name":"payLoadReq.val1 = <operand1>","result":{"duration":6361700,"error_message":"com.intuit.karate.exception.KarateException: CommonValidationsViaPost.feature:54 - evaluation (js) failed: payLoadReq.val1 = <operand1>, javax.script.ScriptException: <eval>:1:18 Expected an operand but found <\r\npayLoadReq.val1 = <operand1>\r\n                  ^ in <eval> at line number 1 at column number 18\nstack trace: jdk.nashorn.api.scripting.NashornScriptEngine.throwAsScriptException(NashornScriptEngine.java:470)","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":54},{"name":"print payLoadReq","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":55},{"name":"request payLoadReq","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":56},{"name":"method post","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":57},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":58},{"name":"match response == {result:#number}","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":59},{"name":"url computeURL  +'tion'","result":{"duration":8338900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":65},{"name":"payLoadReq.val2 = <operand2>","result":{"duration":696700,"error_message":"com.intuit.karate.exception.KarateException: CommonValidationsViaPost.feature:66 - evaluation (js) failed: payLoadReq.val2 = <operand2>, javax.script.ScriptException: <eval>:1:18 Expected an operand but found <\r\npayLoadReq.val2 = <operand2>\r\n                  ^ in <eval> at line number 1 at column number 18\nstack trace: jdk.nashorn.api.scripting.NashornScriptEngine.throwAsScriptException(NashornScriptEngine.java:470)","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":66},{"name":"print payLoadReq","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":67},{"name":"request payLoadReq","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":68},{"name":"method post","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":69},{"name":"status 404","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":70},{"name":"url computeURL","result":{"duration":44800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":75},{"name":"payLoadReq.val1 = 3.8","result":{"duration":27654800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":76},{"name":"payLoadReq.val2 = 4.9","result":{"duration":6178200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":77},{"name":"print payLoadReq","result":{"duration":883500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":78,"doc_string":{"content_type":"","value":"03:14:59.369 [print] {\n  \"operation\": \"add\",\n  \"val1\": 3.8,\n  \"val2\": 4.9\n}","line":78}},{"name":"request payLoadReq","result":{"duration":18300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":79},{"name":"method post","result":{"duration":20569000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":80},{"name":"status 400","result":{"duration":456000,"error_message":"com.intuit.karate.exception.KarateException: CommonValidationsViaPost.feature:81 - status code was: 200, expected: 400, response time: 15, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":7}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":81,"doc_string":{"content_type":"","value":"03:14:59.391 status code was: 200, expected: 400, response time: 15, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":7}","line":81}},{"name":"url computeURL","result":{"duration":12900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":75},{"name":"payLoadReq.val1 = \"a\"","result":{"duration":3874700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":76},{"name":"payLoadReq.val2 = 5","result":{"duration":4822500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":77},{"name":"print payLoadReq","result":{"duration":733500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":78,"doc_string":{"content_type":"","value":"03:14:59.402 [print] {\n  \"operation\": \"add\",\n  \"val1\": \"a\",\n  \"val2\": 5\n}","line":78}},{"name":"request payLoadReq","result":{"duration":17700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":79},{"name":"method post","result":{"duration":8951100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":80},{"name":"status 400","result":{"duration":33200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":81},{"name":"url computeURL","result":{"duration":13000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":75},{"name":"payLoadReq.val1 = \" \"","result":{"duration":9285400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":76},{"name":"payLoadReq.val2 = \" \"","result":{"duration":4729400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":77},{"name":"print payLoadReq","result":{"duration":687700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":78,"doc_string":{"content_type":"","value":"03:14:59.428 [print] {\n  \"operation\": \"add\",\n  \"val1\": \" \",\n  \"val2\": \" \"\n}","line":78}},{"name":"request payLoadReq","result":{"duration":16600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":79},{"name":"method post","result":{"duration":31836700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":80},{"name":"status 400","result":{"duration":443900,"error_message":"com.intuit.karate.exception.KarateException: CommonValidationsViaPost.feature:81 - status code was: 200, expected: 400, response time: 30, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":0}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":81,"doc_string":{"content_type":"","value":"03:14:59.460 status code was: 200, expected: 400, response time: 30, url: http:\/\/localhost:8080\/qa_testCalc_java11\/restWS\/compute, response: {\"result\":0}","line":81}},{"name":"url computeURL","result":{"duration":12700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":75},{"name":"payLoadReq.val1 = \"+\"","result":{"duration":3805400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":76},{"name":"payLoadReq.val2 = \"+\"","result":{"duration":2619600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":77},{"name":"print payLoadReq","result":{"duration":449700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":78,"doc_string":{"content_type":"","value":"03:14:59.468 [print] {\n  \"operation\": \"add\",\n  \"val1\": \"+\",\n  \"val2\": \"+\"\n}","line":78}},{"name":"request payLoadReq","result":{"duration":15700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":79},{"name":"method post","result":{"duration":6695100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":80},{"name":"status 400","result":{"duration":6300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":81},{"name":"url baseUrlCompute","result":{"duration":15300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":97},{"name":"payLoadReq.val1 = 3","result":{"duration":1666700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":98},{"name":"payLoadReq.val2 = 4","result":{"duration":240500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":99},{"name":"payLoadReq.val3 = 7","result":{"duration":2706800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":100},{"name":"print payLoadReq","result":{"duration":494700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":101,"doc_string":{"content_type":"","value":"03:14:59.482 [print] {\n  \"operation\": \"add\",\n  \"val1\": 3,\n  \"val2\": 4,\n  \"val3\": 7\n}","line":101}},{"name":"request payLoadReq","result":{"duration":18900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":102},{"name":"method post","result":{"duration":7977400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":103},{"name":"status 400","result":{"duration":5900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":104},{"name":"url baseUrlCompute","result":{"duration":14000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":109},{"name":"payLoadReq.val1 = 3","result":{"duration":3668900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":110},{"name":"payLoadReq.val2 = 4","result":{"duration":262800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":111},{"name":"payLoadReq.val2 = 7","result":{"duration":2503600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":112},{"name":"print payLoadReq","result":{"duration":536000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":113,"doc_string":{"content_type":"","value":"03:14:59.498 [print] {\n  \"operation\": \"add\",\n  \"val1\": 3,\n  \"val2\": 7,\n  \"val3\": 7\n}","line":113}},{"name":"request payLoadReq","result":{"duration":20200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":114},{"name":"method post","result":{"duration":13960600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":115},{"name":"status 400","result":{"duration":5800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":116},{"name":"url computeURL","result":{"duration":12700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":122},{"name":"payLoadReq.val1 = 3","result":{"duration":1517800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":123},{"name":"payLoadReq.val2 = 4","result":{"duration":313200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":124},{"name":"payLoadReq.operation = \"mod\"","result":{"duration":51310200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":125},{"name":"print payLoadReq","result":{"duration":1533200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":126,"doc_string":{"content_type":"","value":"03:14:59.569 [print] {\n  \"operation\": \"mod\",\n  \"val1\": 3,\n  \"val2\": 4,\n  \"val3\": 7\n}","line":126}},{"name":"request payLoadReq","result":{"duration":17300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":127},{"name":"method post","result":{"duration":12638000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":128},{"name":"match response contains 'Unknown operation: mod'","result":{"duration":23611200,"error_message":"com.intuit.karate.exception.KarateException: CommonValidationsViaPost.feature:129 - path: $, actual: 'Unrecognized field \"val3\" (class com.ataccama.qa.testcalc.rest.JsonCalcRequest), not marked as ignorable (3 known properties: \"val1\", \"val2\", \"operation\"])\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@780551a0; line: 1, column: 46] (through reference chain: com.ataccama.qa.testcalc.rest.JsonCalcRequest[\"val3\"])', expected: 'Unknown operation: mod', reason: not a sub-string","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":129,"doc_string":{"content_type":"","value":"03:14:59.606 assertion failed: path: $, actual: 'Unrecognized field \"val3\" (class com.ataccama.qa.testcalc.rest.JsonCalcRequest), not marked as ignorable (3 known properties: \"val1\", \"val2\", \"operation\"])\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@780551a0; line: 1, column: 46] (through reference chain: com.ataccama.qa.testcalc.rest.JsonCalcRequest[\"val3\"])', expected: 'Unknown operation: mod', reason: not a sub-string","line":129}},{"name":"url computeURL","result":{"duration":8000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":134},{"name":"payLoadReq.val1 = 3","result":{"duration":1343000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":135},{"name":"payLoadReq.val2 = 4","result":{"duration":249200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":136},{"name":"payLoadReq.operation = null","result":{"duration":2717300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":137},{"name":"print payLoadReq","result":{"duration":437700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":138,"doc_string":{"content_type":"","value":"03:14:59.612 [print] {\n  \"operation\": null,\n  \"val1\": 3,\n  \"val2\": 4,\n  \"val3\": 7\n}","line":138}},{"name":"request payLoadReq","result":{"duration":12700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":139},{"name":"method post","result":{"duration":17278600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":140},{"name":"match response contains 'Operation must not be null!'","result":{"duration":2685500,"error_message":"com.intuit.karate.exception.KarateException: CommonValidationsViaPost.feature:141 - path: $, actual: 'Unrecognized field \"val3\" (class com.ataccama.qa.testcalc.rest.JsonCalcRequest), not marked as ignorable (3 known properties: \"val1\", \"val2\", \"operation\"])\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@6be24824; line: 1, column: 45] (through reference chain: com.ataccama.qa.testcalc.rest.JsonCalcRequest[\"val3\"])', expected: 'Operation must not be null!', reason: not a sub-string","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":141,"doc_string":{"content_type":"","value":"03:14:59.632 assertion failed: path: $, actual: 'Unrecognized field \"val3\" (class com.ataccama.qa.testcalc.rest.JsonCalcRequest), not marked as ignorable (3 known properties: \"val1\", \"val2\", \"operation\"])\n at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@6be24824; line: 1, column: 45] (through reference chain: com.ataccama.qa.testcalc.rest.JsonCalcRequest[\"val3\"])', expected: 'Operation must not be null!', reason: not a sub-string","line":141}},{"name":"url computeURL","result":{"duration":11100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":146},{"name":"payLoadReq.val1 = 3","result":{"duration":1383500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":147},{"name":"payLoadReq.val2 = 4","result":{"duration":283800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":148},{"name":"payLoadReq.val3 = 7","result":{"duration":196100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":149},{"name":"print payLoadReq","result":{"duration":493200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":150,"doc_string":{"content_type":"","value":"03:14:59.636 [print] {\n  \"operation\": null,\n  \"val1\": 3,\n  \"val2\": 4,\n  \"val3\": 7\n}","line":150}},{"name":"request payLoadReq","result":{"duration":316900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":151},{"name":"method post","result":{"duration":6388900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":152},{"name":"status 400","result":{"duration":7600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":153},{"name":"url computeURL","result":{"duration":12100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":158},{"name":"payLoadReq.val1 = 3","result":{"duration":1440900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":159},{"name":"payLoadReq.val2 = 4","result":{"duration":226900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":160},{"name":"payLoadReq.val2 = 7","result":{"duration":308000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":161},{"name":"print payLoadReq","result":{"duration":12491800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":162,"doc_string":{"content_type":"","value":"03:14:59.658 [print] {\n  \"operation\": null,\n  \"val1\": 3,\n  \"val2\": 7,\n  \"val3\": 7\n}","line":162}},{"name":"request payLoadReq","result":{"duration":15800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":163},{"name":"method post","result":{"duration":8969700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":164},{"name":"status 400","result":{"duration":4900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":165}],"tags":[{"name":"@common-scenarios","line":12}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":9423700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:56.047 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":64344000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":24932400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":104600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":444100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":18,"name":"Validate addition with two int values (happy path)","description":"","id":"validate-addition-with-two-int-values-(happy-path)","type":"scenario","keyword":"Scenario","steps":[{"name":"url baseUrlCompute","result":{"duration":16600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":19},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":4598400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":20},{"name":"payLoad.val2 = testDataInput[0].operand2","result":{"duration":17990400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":21},{"name":"print payLoad","result":{"duration":4632600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":22,"doc_string":{"content_type":"","value":"03:14:56.349 [print] {\n  \"operation\": \"add\",\n  \"val1\": 5,\n  \"val2\": 4\n}","line":22}},{"name":"request payLoad","result":{"duration":41200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":23},{"name":"method post","result":{"duration":2871705200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":24},{"name":"status 200","result":{"duration":19300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":25},{"name":"print response","result":{"duration":515700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":26,"doc_string":{"content_type":"","value":"03:14:59.223 [print] {\n  \"result\": 9\n}","line":26}},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[0].operand2)","result":{"duration":21874800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":27}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":16055900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:56.046 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":28463900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":357200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":2661900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":34656800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":30,"name":"Validate addition with two negative values","description":"","id":"validate-addition-with-two-negative-values","type":"scenario","keyword":"Scenario","steps":[{"name":"url baseUrlCompute","result":{"duration":49700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":31},{"name":"payLoad.val1 = testDataInput[1].operand1","result":{"duration":30316700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":32},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":39457200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":33},{"name":"request payLoad","result":{"duration":16100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":34},{"name":"method post","result":{"duration":2851045600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":35},{"name":"status 200","result":{"duration":5500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":36},{"name":"match $.result == performAdd(testDataInput[1].operand1,testDataInput[1].operand2)","result":{"duration":33317400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":9019800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:56.047 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":17851200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":5314900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":74600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":44646400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":40,"name":"Validate addition with ONE negative and ONE Positive value","description":"","id":"validate-addition-with-one-negative-and-one-positive-value","type":"scenario","keyword":"Scenario","steps":[{"name":"url baseUrlCompute","result":{"duration":19600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":41},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":27816400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":42},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":40140600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":43},{"name":"request payLoad","result":{"duration":16100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":44},{"name":"method post","result":{"duration":2850486900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":45},{"name":"status 200","result":{"duration":9500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":46},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[1].operand2)","result":{"duration":40332600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":47}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":2798000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:59.574 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":124700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":1858800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":296100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":652900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":61,"name":"Validate idempotency of the api - returns same result every time #1","description":"","id":"validate-idempotency-of-the-api---returns-same-result-every-time-#1","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"url baseUrlCompute","result":{"duration":28700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":51},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":2495600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":52},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":381200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":53},{"name":"request payLoad","result":{"duration":32600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":54},{"name":"method post","result":{"duration":18735200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":55},{"name":"status 200","result":{"duration":5100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":56},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[1].operand2)","result":{"duration":976500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":57}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":3143900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:59.600 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":120400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":3828200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":81100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":372300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":62,"name":"Validate idempotency of the api - returns same result every time #2","description":"","id":"validate-idempotency-of-the-api---returns-same-result-every-time-#2","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"url baseUrlCompute","result":{"duration":9800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":51},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":11896500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":52},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":3217700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":53},{"name":"request payLoad","result":{"duration":15000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":54},{"name":"method post","result":{"duration":21595900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":55},{"name":"status 200","result":{"duration":6400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":56},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[1].operand2)","result":{"duration":709000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":57}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":1481500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:59.591 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":114800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":233300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":76800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":21166600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":63,"name":"Validate idempotency of the api - returns same result every time #3","description":"","id":"validate-idempotency-of-the-api---returns-same-result-every-time-#3","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"url baseUrlCompute","result":{"duration":8600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":51},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":33915800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":52},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":1329600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":53},{"name":"request payLoad","result":{"duration":10900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":54},{"name":"method post","result":{"duration":24185400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":55},{"name":"status 200","result":{"duration":7300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":56},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[1].operand2)","result":{"duration":690300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":57}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":1373700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:59.688 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":120100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":259700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":69000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":599700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":64,"name":"Validate idempotency of the api - returns same result every time #4","description":"","id":"validate-idempotency-of-the-api---returns-same-result-every-time-#4","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"url baseUrlCompute","result":{"duration":11300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":51},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":394300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":52},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":462400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":53},{"name":"request payLoad","result":{"duration":9800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":54},{"name":"method post","result":{"duration":5383200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":55},{"name":"status 200","result":{"duration":5000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":56},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[1].operand2)","result":{"duration":1600900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":57}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":2018900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:59.690 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":133200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":279200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":194200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":346100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":65,"name":"Validate idempotency of the api - returns same result every time #5","description":"","id":"validate-idempotency-of-the-api---returns-same-result-every-time-#5","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"url baseUrlCompute","result":{"duration":11300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":51},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":6225900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":52},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":642500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":53},{"name":"request payLoad","result":{"duration":11800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":54},{"name":"method post","result":{"duration":20358900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":55},{"name":"status 200","result":{"duration":5600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":56},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[1].operand2)","result":{"duration":685200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":57}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":1474600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:59.707 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":117200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":336500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":362800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":361200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":66,"name":"Validate idempotency of the api - returns same result every time #6","description":"","id":"validate-idempotency-of-the-api---returns-same-result-every-time-#6","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"url baseUrlCompute","result":{"duration":28700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":51},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":808900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":52},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":442400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":53},{"name":"request payLoad","result":{"duration":9300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":54},{"name":"method post","result":{"duration":6200500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":55},{"name":"status 200","result":{"duration":4300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":56},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[1].operand2)","result":{"duration":835700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":57}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":1883600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:59.742 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":122400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":275700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":73400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":507800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":67,"name":"Validate idempotency of the api - returns same result every time #7","description":"","id":"validate-idempotency-of-the-api---returns-same-result-every-time-#7","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"url baseUrlCompute","result":{"duration":435500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":51},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":804100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":52},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":711500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":53},{"name":"request payLoad","result":{"duration":7200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":54},{"name":"method post","result":{"duration":10735900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":55},{"name":"status 200","result":{"duration":5000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":56},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[1].operand2)","result":{"duration":689600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":57}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":1253900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:59.764 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":117900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":235000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":88800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":278600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":68,"name":"Validate idempotency of the api - returns same result every time #8","description":"","id":"validate-idempotency-of-the-api---returns-same-result-every-time-#8","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"url baseUrlCompute","result":{"duration":7300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":51},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":345100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":52},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":3090900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":53},{"name":"request payLoad","result":{"duration":7500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":54},{"name":"method post","result":{"duration":7553300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":55},{"name":"status 200","result":{"duration":4600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":56},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[1].operand2)","result":{"duration":988400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":57}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":1249600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:59.772 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":411200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":227100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":69700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":336900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":69,"name":"Validate idempotency of the api - returns same result every time #9","description":"","id":"validate-idempotency-of-the-api---returns-same-result-every-time-#9","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"url baseUrlCompute","result":{"duration":6800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":51},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":339700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":52},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":318800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":53},{"name":"request payLoad","result":{"duration":7000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":54},{"name":"method post","result":{"duration":14317700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":55},{"name":"status 200","result":{"duration":4200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":56},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[1].operand2)","result":{"duration":588900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":57}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def testDataInput = read('classpath:'+'resources\/InputTestData.json')","result":{"duration":1570700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"03:14:59.788 karate.env system property was: qa","line":6}},{"name":"def performAdd = function(op1,op2){return op1 + op2}","result":{"duration":136700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def baseUrlCompute = baseUrl + '\/compute'","result":{"duration":416900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def payLoad = {}","result":{"duration":65000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"payLoad.operation = \"add\"","result":{"duration":2026600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10}]},{"line":70,"name":"Validate idempotency of the api - returns same result every time #10","description":"","id":"validate-idempotency-of-the-api---returns-same-result-every-time-#10","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"url baseUrlCompute","result":{"duration":10800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":51},{"name":"payLoad.val1 = testDataInput[0].operand1","result":{"duration":804900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":52},{"name":"payLoad.val2 = testDataInput[1].operand2","result":{"duration":568400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":53},{"name":"request payLoad","result":{"duration":7400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":54},{"name":"method post","result":{"duration":5979400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":55},{"name":"status 200","result":{"duration":4000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":56},{"name":"match $.result == performAdd(testDataInput[0].operand1,testDataInput[1].operand2)","result":{"duration":516800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":57}]}],"name":"features\/ValidateAdditionPOSTAPI.feature","description":"Validate addition","id":"validate-addition","keyword":"Feature","uri":"features\/ValidateAdditionPOSTAPI.feature","tags":[{"name":"@addition","line":1}]}]